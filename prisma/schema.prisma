// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User 모델에는 username, password, email, bio, created_at updated_at 필드가 있어야 합니다.
// Tweet 모델에는 tweet, created_at 및 updated_at 필드가 있어야 합니다. 또한 User 와의 관계가 있어야 합니다.
// Like 모델에는 created_at 필드가 있어야 하며 User 및 Tweet과의 관계가 있어야 합니다.

model User {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  username    String   
  email       String   @unique
  password    String
  bio         String?  
  tweets      Tweet[]  @relation("UserTweets") 
  likes       Like[]   @relation("UserLikes")
}

model Tweet {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  title       String
  content     String?
  author      User     @relation("UserTweets", fields: [authorId], references: [id])
  authorId    Int
  likes       Like[]   @relation("TweetLikes")
}

model Like {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  tweet       Tweet    @relation("TweetLikes", fields: [tweetId], references: [id])
  tweetId     Int
  owner       User     @relation("UserLikes", fields: [ownerId], references: [id])
  ownerId     Int
}